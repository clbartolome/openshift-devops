apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: git-release
  namespace: ci-cd-workspace
  annotations:
    argocd.argoproj.io/sync-wave: "40"
    description: |
      Creates a release on git
spec:
  workspaces:
    - name: source
      description: The workspace where cicd repo will be modified.
  params:
    - name: APP_NAME
      type: string
    - name: PATH_CONTEXT
      type: string
    - name: IMAGE_VERSION
      description: Image new version
      type: string
    - name: REPO
      description: App resources repository
      type: string
    - name: CONFIGURATION_SECRET
      description: name of the secret that stores users and passwords for gitea and argocd
      type: string
    - name: PIPELINERUN_URL
      type: string
  stepTemplate:
    envFrom:
      - secretRef:
          name: $(params.CONFIGURATION_SECRET)
  steps:
    - name: create-release
      image: registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8:v1.14.4-1
      workingDir: $(workspaces.source.path)/$(params.PATH_CONTEXT)
      script: |

        AUTH_REPO=$(echo $(params.REPO) | sed -E "s#http://(.*)#http://$GITEA_USER:$GITEA_PASS@\1#g")

        git config --global user.email "tekton@redhat.com"
        git config --global user.name "tekton"

        git tag $(params.IMAGE_VERSION) $(git rev-parse HEAD) --message "$(params.APP_NAME)"
        git push $AUTH_REPO $(params.IMAGE_VERSION)

        RELEASE_NOTES="# Release Notes - $(params.IMAGE_VERSION)\n\n$(params.APP_NAME) new release generated by CICD process.\n\n### Images generated:\n\n- **$(params.IMAGE_VERSION)**\n- $(params.IMAGE_VERSION)-rc\n- $(params.IMAGE_VERSION)-dev\n\n### Tekton pipeline:\n\n[View Tekton pipeline in OpenShift]($(params.PIPELINERUN_URL))"

        cat <<EOF > $(workspaces.source.path)/pr.json
        {
          "tag_name": "$(params.IMAGE_VERSION)",
          "name": "$(params.IMAGE_VERSION)",
          "prerelease": false,
          "body": "${RELEASE_NOTES}"
        }
        EOF
        cat $(workspaces.source.path)/pr.json

        RESPONSE=$(curl -o /dev/null -s -w "%{http_code}\n" -X POST \
          -u $GITEA_USER:$GITEA_PASS \
          -d @$(workspaces.source.path)/pr.json \
          -H "Content-Type: application/json" \
          $GITEA_HOST/api/v1/repos/$GITEA_USER/$(params.APP_NAME)/releases)
      
        if [ "$RESPONSE" != "201" ]; then
            echo "Error creating RELEASE, error code: $RESPONSE"
            exit 1
        fi
        

        

          